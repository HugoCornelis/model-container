-*- outline -*-

* advantages of neurospaces
** descriptional nature
The declarative nature of the neurospaces API allows to _describe_
models reaching from subcellular level to systems level.  This allows
to extract information from a model, otherwise unaccessible.  The best
example is extraction of the information needed to partition a model.
** separates the algorithmic part from the descriptive part
Algorithms are separated out from the model.  The algorithms are
instantiated with parameterized references to algorithm classes.
** separates the experimental protocol from the model
The experimental protocol cannot be described with Neurospaces and
that is a good thing.  Use your simulator to describe the experimental
protocol.  I hope to be working in this area too, yet have no time for
the moment.
** automatic data compression
Neurospaces stores a model in a very compact representation.  This is
only possible because Neurospaces does not handle the technical part
of a simulation.  Other neural simulators cannot do this.
** on the fly transformations on the compressed data
Neurospaces allows to create different structural views on the same
data without processing.  This is like structure transformations, but
comes at no cost.  An example of such a transformation is the split of
a spine in two compartments.
** allows to inspect connectivity in various ways
This is especially relevant for projections between networks.
Projections as well as networks may be hierarchical.
** describes a model in an intuitive way
This is the result of the points above.  Put differently, Neurospaces
is supposed to be user-friendly, whereas a simulator is not.
