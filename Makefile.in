# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

##############################################################################
##############################################################################




srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = neurospacesparse$(EXEEXT)
subdir = .
DIST_COMMON = $(am__configure_deps) $(dist_lisp_DATA) \
	$(nobase_dist_neurospacesmodel_DATA) \
	$(nobase_dist_neurospacestest_DATA) $(nobase_include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(top_srcdir)/configure COPYING INSTALL \
	acconfig.h analyzer.c depcomp elisp-comp install-sh missing \
	parser.c
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(lispdir)" "$(DESTDIR)$(neurospacesmodeldir)" \
	"$(DESTDIR)$(neurospacestestdir)" \
	"$(DESTDIR)$(instrumentordir)" "$(DESTDIR)$(includedir)"
pkglibLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(pkglib_LIBRARIES)
AR = ar
ARFLAGS = cru
libneurospacesread_a_AR = $(AR) $(ARFLAGS)
libneurospacesread_a_LIBADD =
am_libneurospacesread_a_OBJECTS = algorithm.$(OBJEXT) \
	algorithmclass.$(OBJEXT) algorithminstance.$(OBJEXT) \
	algorithmset.$(OBJEXT) algorithmsymbol.$(OBJEXT) \
	analyzer.$(OBJEXT) attachment.$(OBJEXT) axonhillock.$(OBJEXT) \
	biocomp.$(OBJEXT) biolevel.$(OBJEXT) \
	cachedconnection.$(OBJEXT) cachedcoordinate.$(OBJEXT) \
	cachedparameter.$(OBJEXT) cacheregistry.$(OBJEXT) \
	cell.$(OBJEXT) channel.$(OBJEXT) \
	concentrationgatekinetic.$(OBJEXT) hhgate.$(OBJEXT) \
	connection.$(OBJEXT) connectionsymbol.$(OBJEXT) \
	connectioncache.$(OBJEXT) coordinatecache.$(OBJEXT) \
	contourpoint.$(OBJEXT) defsym.$(OBJEXT) \
	dependencyfile.$(OBJEXT) emcontour.$(OBJEXT) \
	equation.$(OBJEXT) fiber.$(OBJEXT) function.$(OBJEXT) \
	gatekinetic.$(OBJEXT) group.$(OBJEXT) hines_listlist.$(OBJEXT) \
	idin.$(OBJEXT) importedfile.$(OBJEXT) inputoutput.$(OBJEXT) \
	iocontainer.$(OBJEXT) iohier.$(OBJEXT) iol.$(OBJEXT) \
	modelevent.$(OBJEXT) namespace.$(OBJEXT) network.$(OBJEXT) \
	neurospaces.$(OBJEXT) orderedconnectioncache.$(OBJEXT) \
	parametercache.$(OBJEXT) parameters.$(OBJEXT) \
	parcontainer.$(OBJEXT) parser.$(OBJEXT) \
	parsersupport.$(OBJEXT) pidinstack.$(OBJEXT) pool.$(OBJEXT) \
	population.$(OBJEXT) positionD3.$(OBJEXT) projection.$(OBJEXT) \
	projectionquery.$(OBJEXT) psymbolserialstack.$(OBJEXT) \
	psymbolstack.$(OBJEXT) querymachine.$(OBJEXT) \
	randomvalue.$(OBJEXT) root.$(OBJEXT) segment.$(OBJEXT) \
	segmenter.$(OBJEXT) solverinfo.$(OBJEXT) symbols.$(OBJEXT) \
	symboltable.$(OBJEXT) traversalinfo.$(OBJEXT) \
	traversablealgorithm.$(OBJEXT) treespacetraversal.$(OBJEXT) \
	vector.$(OBJEXT) vectorconnection.$(OBJEXT) \
	vectorconnectionsymbol.$(OBJEXT) vectorcontour.$(OBJEXT) \
	vectorsegment.$(OBJEXT) workload.$(OBJEXT) \
	xs_initialize.$(OBJEXT)
libneurospacesread_a_OBJECTS = $(am_libneurospacesread_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_neurospacesparse_OBJECTS = main.$(OBJEXT)
neurospacesparse_OBJECTS = $(am_neurospacesparse_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
YACCCOMPILE = $(YACC) $(YFLAGS) $(AM_YFLAGS)
SOURCES = $(libneurospacesread_a_SOURCES) $(neurospacesparse_SOURCES)
DIST_SOURCES = $(libneurospacesread_a_SOURCES) \
	$(neurospacesparse_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
dist_lispDATA_INSTALL = $(INSTALL_DATA)
nobase_dist_neurospacesmodelDATA_INSTALL = $(install_sh_DATA)
nobase_dist_neurospacestestDATA_INSTALL = $(install_sh_DATA)
nobase_instrumentorDATA_INSTALL = $(install_sh_DATA)
DATA = $(dist_lisp_DATA) $(nobase_dist_neurospacesmodel_DATA) \
	$(nobase_dist_neurospacestest_DATA) \
	$(nobase_instrumentor_DATA)
nobase_includeHEADERS_INSTALL = $(install_sh_DATA)
HEADERS = $(nobase_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
ALGORITHM_DATA = @ALGORITHM_DATA@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = -O0
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EMACS = @EMACS@
EMACSLOADPATH = @EMACSLOADPATH@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@

#CC = g++
LEX_OUTPUT_ROOT = lex.parser
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MODEL_DESCRIPTION_FILES = @MODEL_DESCRIPTION_FILES@
MODEL_GENESIS_MORPHOLOGYFILES = @MODEL_GENESIS_MORPHOLOGYFILES@
MODEL_GENESIS_TABFILES = @MODEL_GENESIS_TABFILES@
MODEL_PROJECTIONCACHES = @MODEL_PROJECTIONCACHES@
MODEL_SWC_MORPHOLOGYFILES = @MODEL_SWC_MORPHOLOGYFILES@
MODEL_TEXFILES = @MODEL_TEXFILES@
MODEL_XML_FILES = @MODEL_XML_FILES@
MODEL_YAMLFILES = @MODEL_YAMLFILES@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL_CCOPTS = @PERL_CCOPTS@
PERL_LDADD = @PERL_LDADD@
PERL_LDFLAGS = @PERL_LDFLAGS@
POW_LIB = @POW_LIB@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEST_SPECIFICATION_FILES = @TEST_SPECIFICATION_FILES@
VERSION = @VERSION@
YACC = @YACC@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
#	release-expand neurospacesread des 10 0 des-10 hugo.cornelis@gmail.com --verbose

# The file lexsupport.c is compiled as part of analyzer.l, but not as
# a plain source file.  It is needed in the distribution.
# Also the tests are copied overhere.
#
# The variable EXTRA_DIST could also be used here.
am__tar = ${AMTAR} chf - --format=posix "$$tardir"
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
lispdir = @lispdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
SUBDIRS = algorithms convertors . glue/swig
LFLAGS = -i -l -Pparser
YFLAGS = -dv -p parser
AM_CFLAGS = -g3 -fPIC -Wmissing-prototypes -Wmissing-declarations -include config.h -DPRE_PROTO_TRAVERSAL @PERL_CCOPTS@ -I$(top_builddir)
pkglib_LIBRARIES = libneurospacesread.a
libneurospacesread_a_SOURCES = \
	algorithm.c \
	algorithmclass.c \
	algorithminstance.c \
	algorithmset.c \
	algorithmsymbol.c \
	analyzer.l \
	attachment.c \
	axonhillock.c \
	biocomp.c \
	biolevel.c \
	cachedconnection.c \
	cachedcoordinate.c \
	cachedparameter.c \
	cacheregistry.c \
	cell.c \
	channel.c \
	concentrationgatekinetic.c \
	hhgate.c \
	connection.c \
	connectionsymbol.c \
	connectioncache.c \
	coordinatecache.c \
	contourpoint.c \
	defsym.c \
	dependencyfile.c \
	description.tokens \
	emcontour.c \
	equation.c \
	fiber.c \
	function.c \
	gatekinetic.c \
	group.c \
	hines_listlist.c \
	idin.c \
	importedfile.c \
	inputoutput.c \
	iocontainer.c \
	iohier.c \
	iol.c \
	modelevent.c \
	namespace.c \
	network.c \
	neurospaces.c \
	orderedconnectioncache.c \
	parametercache.c \
	parameters.c \
	parcontainer.c \
	parser.additions \
	parser.decl \
	parser.rules \
	parser.y \
	parsersupport.c \
	pidinstack.c \
	pool.c \
	population.c \
	positionD3.c \
	projection.c \
	projectionquery.c \
	psymbolserialstack.c \
	psymbolstack.c \
	querymachine.c \
	randomvalue.c \
	root.c \
	segment.c \
	segmenter.c \
	solverinfo.c \
	symbols.c \
	symboltable.c \
	traversalinfo.c \
	traversablealgorithm.c \
	treespacetraversal.c \
	vector.c \
	vectorconnection.c \
	vectorconnectionsymbol.c \
	vectorcontour.c \
	vectorsegment.c \
	workload.c \
	xs_initialize.c

neurospacesmodeldir = $(prefix)/neurospaces/models
nobase_dist_neurospacesmodel_DATA = @MODEL_DESCRIPTION_FILES@ @MODEL_SWC_MORPHOLOGYFILES@ @MODEL_XML_FILES@ @MODEL_PROJECTIONCACHES@ @MODEL_GENESIS_MORPHOLOGYFILES@ @MODEL_GENESIS_TABFILES@ @MODEL_TEXFILES@ @MODEL_YAMLFILES@ @ALGORITHM_DATA@
neurospacestestdir = $(prefix)/neurospaces
nobase_dist_neurospacestest_DATA = @TEST_SPECIFICATION_FILES@
dist_lisp_DATA = \
	emacs/neurospaces-mode/neurospaces-mode.el \
	emacs/neurospaces-mode/neurospaces-langs.el \
	emacs/neurospaces-mode/neurospaces-files.el \
	emacs/neurospaces-mode/neurospaces-vars.el

RELEASE_MAJOR = `release-extract --major`
RELEASE_MINOR = `release-extract --minor`
RELEASE_MICRO = `release-extract --micro`
check_SCRIPTS = $(srcdir)/glue/swig/perl/tests/neurospaces_test.pm $(srcdir)/glue/swig/perl/tests/neurospaces_test_traversal.pm $(srcdir)/glue/swig/perl/tests/neurospaces_test_algorithm.pm $(srcdir)/glue/swig/perl/tests/neurospaces_test_neuromorpho.pm $(srcdir)/tests/neurospaces_harness

#EXTRA_DIST = `find hierarchy -type f -regex '.*[^~]$'` `find library -type f -regex '.*[^~]$'`
neurospacesparse_LDADD = -L. -lneurospacesread -L./algorithms/event -levent_algorithms -L./algorithms/symbol -lsymbol_algorithms @PERL_LDADD@
neurospacesparse_SOURCES = main.c
neurospacesparse_DEPENDENCIES = $(neurospacesparse_SOURCES) algorithms/libalgorithms.a libneurospacesread.a

#! extract non-archives from perl linkage options
neurospacesparse_LDFLAGS = -lm @PERL_LDFLAGS@
# neurospacesparse_LDFLAGS=-lm -lreadline -lhistory `perl -MExtUtils::Embed -e ldopts | perl -pe 's/(\s|^)[^-]\S+//g'`
# neurospacesparse_LDFLAGS=-lm -lreadline -lhistory algorithms/libalgorithms.a
nobase_include_HEADERS = \
	neurospaces/algorithm.h \
	neurospaces/algorithmclass.h \
	neurospaces/algorithminstance.h \
	neurospaces/algorithminstance_vtable.h \
	neurospaces/algorithmset.h \
	neurospaces/algorithmsymbol.h \
	neurospaces/attachment.h \
	neurospaces/axonhillock.h \
	neurospaces/biocomp.h \
	neurospaces/biolevel.h \
	neurospaces/cachedconnection.h \
	neurospaces/cachedcoordinate.h \
	neurospaces/cachedparameter.h \
	neurospaces/cacheregistry.h \
	neurospaces/cell.h \
	neurospaces/channel.h \
	neurospaces/concentrationgatekinetic.h \
	neurospaces/hhgate.h \
	neurospaces/connection.h \
	neurospaces/connectionsymbol.h \
	neurospaces/connectioncache.h \
	neurospaces/coordinatecache.h \
	neurospaces/contourpoint.h \
	neurospaces/defsym.h \
	neurospaces/dependencyfile.h \
	neurospaces/double.h \
	neurospaces/emcontour.h \
	neurospaces/equation.h \
	neurospaces/fiber.h \
	neurospaces/function.h \
	neurospaces/gatekinetic.h \
	neurospaces/genesis/olf/olf_defs.h \
	neurospaces/genesis/olf/olf_struct.h \
	neurospaces/genesis/sim/sim_struct.h \
	neurospaces/group.h \
	neurospaces/hines_list.h \
	neurospaces/hines_listlist.h \
	neurospaces/idin.h \
	neurospaces/importedfile.h \
	neurospaces/inputoutput.h \
	neurospaces/iocontainer.h \
	neurospaces/iohier.h \
	neurospaces/iol.h \
	neurospaces/lexsupport.h \
	neurospaces/modelevent.h \
	neurospaces/namespace.h \
	neurospaces/network.h \
	neurospaces/neurospaces.h \
	neurospaces/orderedconnectioncache.h \
	neurospaces/parametercache.h \
	neurospaces/parameters.h \
	neurospaces/parcontainer.h \
	neurospaces/parsersupport.h \
	neurospaces/pidinstack.h \
	neurospaces/pool.h \
	neurospaces/population.h \
	neurospaces/positionD3.h \
	neurospaces/projection.h \
	neurospaces/projectionquery.h \
	neurospaces/psymbolserialstack.h \
	neurospaces/psymbolstack.h \
	neurospaces/querymachine.h \
	neurospaces/randomvalue.h \
	neurospaces/root.h \
	neurospaces/segment.h \
	neurospaces/segmenter.h \
	neurospaces/solverinfo.h \
	neurospaces/solvermapper.h \
	neurospaces/traversablealgorithm.h \
	neurospaces/treespacetraversal.h \
	neurospaces/symbols.h \
	neurospaces/symboltable.h \
	neurospaces/symbolvirtual_protos.h \
	neurospaces/traversalinfo.h \
	neurospaces/vector.h \
	neurospaces/vectorconnection.h \
	neurospaces/vectorconnectionsymbol.h \
	neurospaces/vectorcontour.h \
	neurospaces/vectorsegment.h \
	neurospaces/vtable.h \
	neurospaces/workload.h

BUILT_SOURCES = \
	hierarchy/output/algorithm_instances/.sentinel \
	hierarchy/output/algorithmclasses/.sentinel \
	hierarchy/output/symbols/.sentinel \
	parser.c \
	parser.h \
	parser.y \
	xs_initialize.c

CLEANFILES = \
	hierarchy/output/algorithm_instances/.sentinel \
	hierarchy/output/algorithmclasses/.sentinel \
	hierarchy/output/symbols/.sentinel \
	analyzer.c \
	parser.c \
	parser.h \
	parser.output \
	parser.rules.numbered \
	parser.y \
	xs_initialize.c

TESTS = $(srcdir)/tests/neurospaces_harness
instrumentordir = $(prefix)/neurospaces/instrumentor
nobase_instrumentor_DATA = $(shell find $(srcdir)/hierarchy -type f)
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .l .o .obj .y
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) $(top_srcdir)/acconfig.h
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-pkglibLIBRARIES: $(pkglib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(mkdir_p) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(pkglibLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(pkglibdir)/$$f'"; \
	    $(pkglibLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(pkglibdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(pkglib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(pkglibdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(pkglibdir)/$$p"; \
	  else :; fi; \
	done

uninstall-pkglibLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkglibdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(pkglibdir)/$$p"; \
	done

clean-pkglibLIBRARIES:
	-test -z "$(pkglib_LIBRARIES)" || rm -f $(pkglib_LIBRARIES)
libneurospacesread.a: $(libneurospacesread_a_OBJECTS) $(libneurospacesread_a_DEPENDENCIES) 
	-rm -f libneurospacesread.a
	$(libneurospacesread_a_AR) libneurospacesread.a $(libneurospacesread_a_OBJECTS) $(libneurospacesread_a_LIBADD)
	$(RANLIB) libneurospacesread.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
neurospacesparse$(EXEEXT): $(neurospacesparse_OBJECTS) $(neurospacesparse_DEPENDENCIES) 
	@rm -f neurospacesparse$(EXEEXT)
	$(LINK) $(neurospacesparse_LDFLAGS) $(neurospacesparse_OBJECTS) $(neurospacesparse_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/algorithm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/algorithmclass.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/algorithminstance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/algorithmset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/algorithmsymbol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/analyzer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/attachment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/axonhillock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/biocomp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/biolevel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cachedconnection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cachedcoordinate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cachedparameter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cacheregistry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cell.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/concentrationgatekinetic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connectioncache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connectionsymbol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contourpoint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coordinatecache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/defsym.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dependencyfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emcontour.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fiber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/function.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gatekinetic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/group.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hhgate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hines_listlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/idin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/importedfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inputoutput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iocontainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iohier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/modelevent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/namespace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/network.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neurospaces.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/orderedconnectioncache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parametercache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parameters.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parcontainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parsersupport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pidinstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/population.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/positionD3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/projection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/projectionquery.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/psymbolserialstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/psymbolstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/querymachine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/randomvalue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/root.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/segment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/segmenter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/solverinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/symbols.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/symboltable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/traversablealgorithm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/traversalinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treespacetraversal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vectorconnection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vectorconnectionsymbol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vectorcontour.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vectorsegment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/workload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xs_initialize.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.l.c:
	$(LEXCOMPILE) $<
	sed '/^#/ s|$(LEX_OUTPUT_ROOT)\.c|$@|' $(LEX_OUTPUT_ROOT).c >$@
	rm -f $(LEX_OUTPUT_ROOT).c

.y.c:
	$(YACCCOMPILE) $<
	if test -f y.tab.h; then \
	  to=`echo "$*_H" | sed \
                -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/' \
                -e 's/[^ABCDEFGHIJKLMNOPQRSTUVWXYZ]/_/g'`; \
	  sed -e "/^#/!b" -e "s/Y_TAB_H/$$to/g" -e "s|y\.tab\.h|$*.h|" \
            y.tab.h >$*.ht; \
	  rm -f y.tab.h; \
	  if cmp -s $*.ht $*.h; then \
	    rm -f $*.ht ;\
	  else \
	    mv $*.ht $*.h; \
	  fi; \
	fi
	if test -f y.output; then \
	  mv y.output $*.output; \
	fi
	sed '/^#/ s|y\.tab\.c|$@|' y.tab.c >$@t && mv $@t $@
	rm -f y.tab.c
uninstall-info-am:
install-dist_lispDATA: $(dist_lisp_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(lispdir)" || $(mkdir_p) "$(DESTDIR)$(lispdir)"
	@list='$(dist_lisp_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_lispDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(lispdir)/$$f'"; \
	  $(dist_lispDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(lispdir)/$$f"; \
	done

uninstall-dist_lispDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_lisp_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(lispdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(lispdir)/$$f"; \
	done
install-nobase_dist_neurospacesmodelDATA: $(nobase_dist_neurospacesmodel_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(neurospacesmodeldir)" || $(mkdir_p) "$(DESTDIR)$(neurospacesmodeldir)"
	@$(am__vpath_adj_setup) \
	list='$(nobase_dist_neurospacesmodel_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__vpath_adj) \
	  echo " $(nobase_dist_neurospacesmodelDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(neurospacesmodeldir)/$$f'"; \
	  $(nobase_dist_neurospacesmodelDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(neurospacesmodeldir)/$$f"; \
	done

uninstall-nobase_dist_neurospacesmodelDATA:
	@$(NORMAL_UNINSTALL)
	@$(am__vpath_adj_setup) \
	list='$(nobase_dist_neurospacesmodel_DATA)'; for p in $$list; do \
	  $(am__vpath_adj) \
	  echo " rm -f '$(DESTDIR)$(neurospacesmodeldir)/$$f'"; \
	  rm -f "$(DESTDIR)$(neurospacesmodeldir)/$$f"; \
	done
install-nobase_dist_neurospacestestDATA: $(nobase_dist_neurospacestest_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(neurospacestestdir)" || $(mkdir_p) "$(DESTDIR)$(neurospacestestdir)"
	@$(am__vpath_adj_setup) \
	list='$(nobase_dist_neurospacestest_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__vpath_adj) \
	  echo " $(nobase_dist_neurospacestestDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(neurospacestestdir)/$$f'"; \
	  $(nobase_dist_neurospacestestDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(neurospacestestdir)/$$f"; \
	done

uninstall-nobase_dist_neurospacestestDATA:
	@$(NORMAL_UNINSTALL)
	@$(am__vpath_adj_setup) \
	list='$(nobase_dist_neurospacestest_DATA)'; for p in $$list; do \
	  $(am__vpath_adj) \
	  echo " rm -f '$(DESTDIR)$(neurospacestestdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(neurospacestestdir)/$$f"; \
	done
install-nobase_instrumentorDATA: $(nobase_instrumentor_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(instrumentordir)" || $(mkdir_p) "$(DESTDIR)$(instrumentordir)"
	@$(am__vpath_adj_setup) \
	list='$(nobase_instrumentor_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__vpath_adj) \
	  echo " $(nobase_instrumentorDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(instrumentordir)/$$f'"; \
	  $(nobase_instrumentorDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(instrumentordir)/$$f"; \
	done

uninstall-nobase_instrumentorDATA:
	@$(NORMAL_UNINSTALL)
	@$(am__vpath_adj_setup) \
	list='$(nobase_instrumentor_DATA)'; for p in $$list; do \
	  $(am__vpath_adj) \
	  echo " rm -f '$(DESTDIR)$(instrumentordir)/$$f'"; \
	  rm -f "$(DESTDIR)$(instrumentordir)/$$f"; \
	done
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@$(am__vpath_adj_setup) \
	list='$(nobase_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__vpath_adj) \
	  echo " $(nobase_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(nobase_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@$(am__vpath_adj_setup) \
	list='$(nobase_include_HEADERS)'; for p in $$list; do \
	  $(am__vpath_adj) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/emacs/neurospaces-mode $(distdir)/neurospaces $(distdir)/neurospaces/genesis/olf $(distdir)/neurospaces/genesis/sim
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(lispdir)" "$(DESTDIR)$(neurospacesmodeldir)" "$(DESTDIR)$(neurospacestestdir)" "$(DESTDIR)$(instrumentordir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f analyzer.c
	-rm -f parser.c
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-local \
	clean-pkglibLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-dist_lispDATA \
	install-nobase_dist_neurospacesmodelDATA \
	install-nobase_dist_neurospacestestDATA \
	install-nobase_includeHEADERS install-nobase_instrumentorDATA

install-exec-am: install-binPROGRAMS install-pkglibLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_lispDATA \
	uninstall-info-am uninstall-nobase_dist_neurospacesmodelDATA \
	uninstall-nobase_dist_neurospacestestDATA \
	uninstall-nobase_includeHEADERS \
	uninstall-nobase_instrumentorDATA uninstall-pkglibLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \
	check-TESTS check-am clean clean-binPROGRAMS clean-generic \
	clean-local clean-pkglibLIBRARIES clean-recursive ctags \
	ctags-recursive dist dist-all dist-bzip2 dist-gzip dist-hook \
	dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-recursive distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_lispDATA install-exec \
	install-exec-am install-info install-info-am install-man \
	install-nobase_dist_neurospacesmodelDATA \
	install-nobase_dist_neurospacestestDATA \
	install-nobase_includeHEADERS install-nobase_instrumentorDATA \
	install-pkglibLIBRARIES install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_lispDATA uninstall-info-am \
	uninstall-nobase_dist_neurospacesmodelDATA \
	uninstall-nobase_dist_neurospacestestDATA \
	uninstall-nobase_includeHEADERS \
	uninstall-nobase_instrumentorDATA uninstall-pkglibLIBRARIES


show-release-labels:
	echo "Release information (major-minor-micro): $(RELEASE_MAJOR)-$(RELEASE_MINOR)-$(RELEASE_MICRO)"

dist-keywords:
	release-expand model-container $(RELEASE_MAJOR) $(RELEASE_MINOR) $(RELEASE_MICRO) $(RELEASE_MAJOR)-$(RELEASE_MINOR) hugo.cornelis@gmail.com --verbose

dist-hook: dist-keywords
	if test -n "$$NEUROSPACES_RELEASE" ; then cd $(srcdir) && if test -n "`mtn ls changed `" ; then false ; else true ; fi ; else true ; fi
	find $(distdir) -name _Inline -exec chmod -R u+w \{\} \;
	$(RM) -fr `find $(distdir) -name _Inline`
	$(RM) -fr hierarchy/output
	cp $(srcdir)/neurospaces.prj $(distdir)
	cp $(srcdir)/abstract.txt $(distdir)
	cp $(srcdir)/license.txt $(distdir)
	cp $(srcdir)/lexsupport.c $(distdir)
	cp -a $(srcdir)/docs $(distdir)
	$(RM) -fr $(distdir)/docs/paper.*
	$(srcdir)/install-sh -d $(distdir)/tests
	$(srcdir)/install-sh -d $(distdir)/tests/html
	$(srcdir)/install-sh -d $(distdir)/tests/html/algorithms
	$(srcdir)/install-sh -d $(distdir)/tests/html/code
	$(srcdir)/install-sh -d $(distdir)/tests/html/specifications
	$(srcdir)/install-sh -d $(distdir)/tests/html/specifications/algorithms
	$(srcdir)/install-sh -d $(distdir)/tests/html/specifications/code
	cp -dp $(srcdir)/tests/{neurospaces_harness,neurospaces_harness.ptkdb,command_extractor,command_extractor.ptkdb,tests_2_html,tests_2_html.ptkdb,tests.config} $(distdir)/tests
	cp -a $(srcdir)/tests.config $(distdir)
# get the logos right
	cp -a $(srcdir)/docs/logos/ns-main-logo-dark2-notext-32x32.jpg $(distdir)/tests/html/ns-main-logo-dark2-notext-32x32.jpg
	cp -a $(srcdir)/docs/logos/ns-main-logo-dark2-notext-32x32.jpg $(distdir)/tests/html/algorithms/ns-main-logo-dark2-notext-32x32.jpg
	cp -a $(srcdir)/docs/logos/ns-main-logo-dark2-notext-32x32.jpg $(distdir)/tests/html/code/ns-main-logo-dark2-notext-32x32.jpg
	cp -a $(srcdir)/docs/logos/ns-main-logo-dark2-notext-32x32.jpg $(distdir)/tests/html/specifications/ns-main-logo-dark2-notext-32x32.jpg
	cp -a $(srcdir)/docs/logos/ns-main-logo-dark2-notext-32x32.jpg $(distdir)/tests/html/specifications/algorithms/ns-main-logo-dark2-notext-32x32.jpg
	cp -a $(srcdir)/docs/logos/ns-main-logo-dark2-notext-32x32.jpg $(distdir)/tests/html/specifications/code/ns-main-logo-dark2-notext-32x32.jpg
	cp -a $(srcdir)/hierarchy $(distdir)
	rm -fr $(distdir)/hierarchy/output
# prcs diff -k neurospaces.prj `prcs 2>/dev/null execute --not ".*\(directory\|symlink\)" neurospaces.prj | grep -v "neurospaces\.prj" | grep -v "purkinjespine" `
# $Format: "	( cd $(distdir)/tests && chmod -R u+w . && ./tests_2_html --header '<img src=\"ns-main-logo-dark2-notext-32x32.jpg\" alt=\"Main Neurospaces logo\"> ${package}, ${label}, ${email} <hr>' --introduction introduction.html )" $
	( cd $(distdir)/tests && chmod -R u+w . && ./tests_2_html --header '<img src="ns-main-logo-dark2-notext-32x32.jpg" alt="Main Neurospaces logo"> neurospaces 0.1675 Thu, 27 Dec 2007 15:58:18 -0600 hugo<hr>' --introduction introduction.html )

#! things below are obsoleted, but left here as a memo of how to do this kind of thing.

# clean-local : make sure that all directories, including the ones
# from previous dist builds are writable, such that we can remove
# _Inline directories from previous builds.

clean-local:
	find $(srcdir) -type d -exec chmod -R u+w \{\} \;
	$(RM) -fr `find $(srcdir) -name _Inline`
	$(RM) -fr $(srcdir)/hierarchy/output

hierarchy/output/symbols/.sentinel: $(srcdir)/hierarchy/symbols $(srcdir)/hierarchy/instrumentor config.h
	$(srcdir)/hierarchy/instrumentor --null-checks $(srcdir)/hierarchy/symbols --output hierarchy/output

hierarchy/output/algorithm_instances/.sentinel: $(srcdir)/hierarchy/algorithminstances $(srcdir)/hierarchy/instrumentor config.h
	$(srcdir)/hierarchy/instrumentor --null-checks $(srcdir)/hierarchy/algorithminstances --output hierarchy/output

hierarchy/output/algorithmclasses/.sentinel: $(srcdir)/hierarchy/algorithmclasses $(srcdir)/hierarchy/instrumentor config.h
	$(srcdir)/hierarchy/instrumentor --null-checks $(srcdir)/hierarchy/algorithmclasses --output hierarchy/output

parser.y: $(srcdir)/parser.decl $(srcdir)/description.tokens parser.rules.numbered $(srcdir)/parser.additions
	cat >parser.y $(srcdir)/parser.decl $(srcdir)/description.tokens parser.rules.numbered $(srcdir)/parser.additions
parser.rules.numbered: $(srcdir)/parser.rules
	perl -ne 'BEGIN { $$filename = shift @ARGV ; $$line++ } $$line++ ; s/^#line.*/#line $$line "$$filename"/; print' <$(srcdir)/parser.rules >parser.rules.numbered $(srcdir)/parser.rules
analyzer.o: parser.h
parser.c: parser.y
parser.h: parser.y
xs_initialize.c:
	perl -MExtUtils::Embed -e xsinit -- -o - >xs_initialize.c

test: check

html-upload-prepare:
	rm -fr html/htdocs/neurospaces_project/neurospaces
	mkdir --parents html/htdocs/neurospaces_project/neurospaces
# $Format: "	( cd tests && ./tests_2_html --header '<img src=\"ns-main-logo-dark2-notext-32x32.jpg\" alt=\"Main Neurospaces logo\"> ${package}, ${label}, ${email} <hr>' --introduction introduction.html )" $
	( cd tests && ./tests_2_html --header '<img src="ns-main-logo-dark2-notext-32x32.jpg" alt="Main Neurospaces logo"> neurospaces 0.1675 Thu, 27 Dec 2007 15:58:18 -0600 hugo<hr>' --introduction introduction.html )
	tar cfh - tests/html | ( cd html/htdocs/neurospaces_project/neurospaces && tar vxf - )
	hierarchy/types_2_html >html/htdocs/neurospaces_project/neurospaces/algorithminstances.html hierarchy/algorithminstances
	hierarchy/types_2_html >html/htdocs/neurospaces_project/neurospaces/symbols.html hierarchy/symbols

html-upload: html-upload-prepare
	scp -pr html/htdocs/* hcornelis@shell.sourceforge.net:/home/groups/n/ne/neurospaces/htdocs/

internal-library:
# $Format: "	tar cfz library-${package}-${label}.tar.gz library/"$
	tar cfz library-model-container-network-6.tar.gz library/

libneurospacesread.so: libneurospacesread.a
	$(CC) \
	-shared \
	-fPIC \
	`find algorithms -name "*.o" ` \
	algorithm.o \
	algorithmclass.o \
	algorithminstance.o \
	algorithmset.o \
	algorithmsymbol.o \
	analyzer.o \
	attachment.o \
	axonhillock.o \
	biocomp.o \
	biolevel.o \
	cachedconnection.o \
	cachedcoordinate.o \
	cachedparameter.o \
	cacheregistry.o \
	cell.o \
	channel.o \
	concentrationgatekinetic.o \
	hhgate.o \
	connection.o \
	connectionsymbol.o \
	connectioncache.o \
	defsym.o \
	dependencyfile.o \
	equation.o \
	fiber.o \
	function.o \
	gatekinetic.o \
	group.o \
	hines_listlist.o \
	idin.o \
	importedfile.o \
	inputoutput.o \
	iocontainer.o \
	iohier.o \
	iol.o \
	modelevent.o \
	namespace.o \
	network.o \
	neurospaces.o \
	orderedconnectioncache.o \
	parametercache.o \
	parameters.o \
	parcontainer.o \
	parser.o \
	parsersupport.o \
	pidinstack.o \
	pool.o \
	population.o \
	positionD3.o \
	projection.o \
	projectionquery.o \
	psymbolserialstack.o \
	psymbolstack.o \
	querymachine.o \
	randomvalue.o \
	root.o \
	segment.o \
	segmenter.o \
	solverinfo.o \
	symbols.o \
	symboltable.o \
	traversalinfo.o \
	traversablealgorithm.o \
	treespacetraversal.o \
	vector.o \
	vectorconnection.o \
	vectorconnectionsymbol.o \
	vectorcontour.o \
	vectorsegment.o \
	workload.o \
	xs_initialize.o \
	-o libneurospacesread.so

#perldir = $(prefix)/glue/swig/perl

#nobase_perl_DATA = @PERL_EMBED_DATA@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
